---
# @see https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
# @see https://github.com/actions/virtual-environments
name: Test
on:
  push:
    branches:
      - "*"
defaults:
  run:
    shell: bash
jobs:
  code:
    name: Code
    timeout-minutes: 15
    runs-on: "ubuntu-latest"
    services:
      localstack:
        image: localstack/localstack
        ports:
          - 4566:4566
        options: >-
          --health-cmd "awslocal sqs list-queues"
          --health-interval 20s
          --health-timeout 10s
          --health-retries 5
        env:
          TZ: "Asia/Tokyo"
          DEBUG: "1"
          FORCE_NONINTERACTIVE: "1"
          SERVICES: "sqs"
          DEFAULT_REGION: "ap-northeast-1"
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"

      - name: Check out Go cache paths
        id: go-cache-paths
        run: |
          echo "::set-output name=go-cache::$(go env GOCACHE)"
          echo "::set-output name=go-mod-cache::$(go env GOMODCACHE)"

      - name: Cache GOCACHE
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-cache }}
          key: ${{ runner.os }}-go-cache-${{ hashFiles('*.go', '**/*.go') }}

      - name: Cache GOMODCACHE
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod-cache }}
          key: ${{ runner.os }}-go-mod-cache-${{ hashFiles('go.sum', '**/go.sum') }}

      - name: Build
        run: make build

      - name: Lint
        run: make lint

      - name: Test
        run: make test

  image:
    name: Image
    timeout-minutes: 15
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint container image
        run: make lint-image

      - name: Build container image
        run: make build-image

      - name: Create cluster with Kind
        run: kind create cluster

      - name: Apply manifests
        run: make apply-manifests

      - name: Waiting for registry to be ready
        run: make wait-registry-running

      - name: Start port forwarding for container registry
        run: make port-forward-registry &

      - name: Push container image
        run: make push-image

      - name: Waiting for controller to be ready
        run: make wait-controller-running

      - name: Waiting for localstack to be ready
        run: make wait-localstack-running

      - name: Start port forwarding for Localstack
        run: make port-forward-localstack &

      - name: Test
        run: |
          make create-example-queue
          for i in $(seq 1 10); do
            make enqueue-example-task BODY=Hey$i
          done
          sleep 11
          kubectl --context=kind-kind logs $(kubectl --context=kind-kind get pods -o json | jq -r '.items[] | .metadata.name' | grep controller)
          make wait-example-completed
          pods=($(kubectl --context=kind-kind get pods -o json | jq -r '.items[] | .metadata.name' | grep example))
          test ${#pods[@]} -ge 3
          pods=($(kubectl --context=kind-kind get pods -o json | jq -r '.items[] | .metadata.name' | grep example10))
          for pod in ${pods[@]}; do
            kubectl --context=kind-kind logs $pod || echo "Deleted: $pod: Hey" | tee /dev/stderr | grep Hey
          done
